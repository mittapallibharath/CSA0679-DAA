#include <stdio.h>

#define MAX_CONTAINERS 100
#define CONTAINER_CAPACITY 10

// Function to compute container loading
int computeContainerLoading(int containers[], int numContainers, int itemWeights[], int numItems)
{
    int containerIndex = 0;
    int currentWeight = 0;

    for (int i = 0; i < numItems; i++) {
        if (currentWeight + itemWeights[i] <= CONTAINER_CAPACITY) {
            containers[containerIndex] = i;
            currentWeight += itemWeights[i];
        } else {
            containerIndex++;
            if (containerIndex >= numContainers)
                return containerIndex;
            containers[containerIndex] = i;
            currentWeight = itemWeights[i];
        }
    }

    return containerIndex + 1;
}

int main()
{
    int numContainers, numItems;
    int containers[MAX_CONTAINERS];
    int itemWeights[MAX_CONTAINERS];

    printf("Enter the number of containers: ");
    scanf("%d", &numContainers);

    printf("Enter the number of items: ");
    scanf("%d", &numItems);

    printf("Enter the weight of each item:\n");
    for (int i = 0; i < numItems; i++) {
        printf("Item %d: ", i + 1);
        scanf("%d", &itemWeights[i]);
    }

    int numLoadedContainers = computeContainerLoading(containers, numContainers, itemWeights, numItems);

    printf("\nNumber of loaded containers: %d\n", numLoadedContainers);
    printf("Container loading details:\n");
    for (int i = 0; i < numLoadedContainers; i++) {
        printf("Container %d: ", i + 1);
        int containerWeight = 0;
        for (int j = containers[i]; j < numItems && containerWeight + itemWeights[j] <= CONTAINER_CAPACITY; j++) {
            printf("%d ", itemWeights[j]);
            containerWeight += itemWeights[j];
        }
        printf("(Total weight: %d)\n", containerWeight);
    }

    return 0;
}
