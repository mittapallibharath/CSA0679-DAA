#include <stdio.h>

#define MAX_VERTICES 100
#define INF 1000000

int num_vertices;
int distance[MAX_VERTICES][MAX_VERTICES];

void floyd() {
    int i, j, k;
    for (k = 0; k < num_vertices; k++) {
        for (i = 0; i < num_vertices; i++) {
            for (j = 0; j < num_vertices; j++) {
                if (distance[i][k] + distance[k][j] < distance[i][j]) {
                    distance[i][j] = distance[i][k] + distance[k][j];
                }
            }
        }
    }
}

int main() {
    int i, j;

    printf("Enter the number of vertices: ");
    scanf("%d", &num_vertices);

    printf("Enter the adjacency matrix:\n");
    for (i = 0; i < num_vertices; i++) {
        for (j = 0; j < num_vertices; j++) {
            scanf("%d", &distance[i][j]);
            if (distance[i][j] == 0 && i != j) {
                distance[i][j] = INF;
            }
        }
    }

    floyd();

    printf("Shortest distances between every pair of vertices:\n");
    for (i = 0; i < num_vertices; i++) {
        for (j = 0; j < num_vertices; j++) {
            printf("%d ", distance[i][j]);
        }
        printf("\n");
    }

    return 0;
}
