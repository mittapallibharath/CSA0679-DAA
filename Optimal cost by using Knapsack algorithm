#include <stdio.h>

#define MAX_ITEMS 100
#define MAX_WEIGHT 1000

int max(int a, int b) {
    return (a > b) ? a : b;
}

int knapsack(int weights[], int values[], int num_items, int max_weight) {
    int dp[MAX_ITEMS+1][MAX_WEIGHT+1];
    int i, w;

    for (i = 0; i <= num_items; i++) {
        for (w = 0; w <= max_weight; w++) {
            if (i == 0 || w == 0) {
                dp[i][w] = 0;
            } else if (weights[i-1] <= w) {
                dp[i][w] = max(values[i-1] + dp[i-1][w-weights[i-1]], dp[i-1][w]);
            } else {
                dp[i][w] = dp[i-1][w];
            }
        }
    }

    return dp[num_items][max_weight];
}

int main() {
    int weights[MAX_ITEMS], values[MAX_ITEMS];
    int num_items, max_weight, i;

    printf("Enter the number of items: ");
    scanf("%d", &num_items);

    printf("Enter the weights and values of each item:\n");
    for (i = 0; i < num_items; i++) {
        scanf("%d%d", &weights[i], &values[i]);
    }

    printf("Enter the maximum weight capacity of the knapsack: ");
    scanf("%d", &max_weight);

    printf("The optimal value of the knapsack is: %d\n", knapsack(weights, values, num_items, max_weight));

    return 0;
}
